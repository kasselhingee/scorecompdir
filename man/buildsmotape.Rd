% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/buildsmotape.R
\name{buildsmotape}
\alias{buildsmotape}
\title{Build a CppAD Tape of a Score-Matching Objective Function}
\usage{
buildsmotape(
  manifoldname,
  llname,
  utape,
  usertheta,
  weightname = "ones",
  acut = 1,
  thetatape_creator = function(n) {
     seq(length.out = n)
 },
  verbose = FALSE
)
}
\arguments{
\item{manifoldname}{Manifold with tranformation name. Passed to \code{\link[=manifoldtransform]{manifoldtransform()}}.}

\item{llname}{Name of the log-likelihood function. Passed to \code{\link[=tapell]{tapell()}}.}

\item{utape}{An example observation (a single vector) to use for taping. The results shouldn't depend on \code{utape} so long as \code{utape} is in the manifold and the other functions are properly implemented.}

\item{usertheta}{A vector of parameter elements for the likelihood function. \code{NA} elements are to be fitted. Other elements are fixed at the provided value.}

\item{weightname}{The name of the divergence weight function ('ones' for manifolds without boundary).}

\item{acut}{The threshold \eqn{a_c} in the divergence weight function.}

\item{thetatape_creator}{A function that accepts an integer \code{n}, and returns a vector of \code{n} length. The function is used to fill in the \code{NA} elements of \code{usertheta} when building the tapes.}

\item{verbose}{If \code{TRUE} more details are printed when taping.}
}
\value{
Returns a list of the log-likelihood tape (note that the \emph{input} for this tape is a function on the manifold), the tape of the score matching objective (the \emph{input} here is the non-fixed parameter values), and some information used to generate the tape.
}
\description{
Generates \code{CppAD} tapes for a model.
}
\details{
When using, \code{CppAD} one first creates \emph{tapes} of functions. These tapes can then be used for evaluating the function and its derivatives, and generating further tapes through argument swapping, differentiation and composition.
The taping relies on specifying typical argument values for the functions, so the programming is simplest when the function is defined without conditions.
Tapes can have both \emph{independent} variables and \emph{dynamic} variables.
The differentiation with \code{CppAD} occurs with respect to the independent variables.
Tapes of tapes are possible, including tapes that swap the independent and dynamic variables - this is how this package differentiates with respect to a dynamic variables.

To build a tape for the score matching objective function, the package first tapes the map from a point \eqn{z} on the manifold to the value of the log-likelihood, where the independent variable is the \eqn{z}, and the dynamic variable is a vector of the \emph{non}-fixed parameter values.
This tape is then used to generate a tape for the score matching objective with the non-fixed parameter values as the independent variable.
}
\examples{
p <- 3
u <- movMF::rmovMF(1, rep(1, p))
ltheta <- p #length of vMF parameter vector
intheta <- rep(NA, length.out = ltheta)
tapes <- buildsmotape("Snative", "vMF",
              utape = u,
              usertheta = intheta,
              "ones", 1, verbose = FALSE
              )
pForward0(tapes$lltape, u, runif(n = ltheta))
pForward0(tapes$smotape, runif(n = ltheta), u)
}
