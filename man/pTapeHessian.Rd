% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{pTapeHessian}
\alias{pTapeHessian}
\title{Tape the Hessian of a CppAD Tape}
\usage{
pTapeHessian(pfun, x, dynparam)
}
\arguments{
\item{pfun}{Rcpp::XPtr to an ADFun tape a tape with dynamic parameters and independent parameters}

\item{x}{A vector in the domain of the taped function.}

\item{dynparam}{a vector of the dynamic parameters}
}
\value{
A \code{Rcpp::XPtr} to a CppAD::ADFun object.
}
\description{
Creates a tape of the Hessian of a function taped by CppAD.
The taped function represented by \code{pfun} must be scalar-valued (i.e. a vector of length 1).
The \code{x} vector and \code{dynparam} are used as the values to conduct the taping.
}
\details{
When the returned tape is evaluated (via say \code{\link[=pForward0]{pForward0()}}, the resultant vector contains the Hessian in long format (see \url{https://cppad.readthedocs.io/en/latest/Hessian.html}).
Suppose the function represented by \code{pfun} maps from \eqn{n}-dimensional space to \eqn{1}-dimensional space, then
the first \eqn{n} elements of the vector is the gradient of the partial derivative with respect to the first dimension of the function's domain.
The next \eqn{n} elements of the vector is the gradient of the partial derivative of the second dimension of the function's domain.
The Hessian as a matrix, can be obtained by using \code{\link[=as.matrix]{as.matrix()}} with \code{ncol = n}.
}
