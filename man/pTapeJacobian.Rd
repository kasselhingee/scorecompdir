% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{pTapeJacobian}
\alias{pTapeJacobian}
\title{Tape the Jacobian of CppAD Tape}
\usage{
pTapeJacobian(pfun, x, dynparam)
}
\arguments{
\item{pfun}{Rcpp::XPtr to an ADFun tape a tape with dynamic parameters and independent parameters}

\item{x}{A vector in the domain of the taped function.}

\item{dynparam}{a vector of the dynamic parameters}
}
\value{
A \code{Rcpp::XPtr} to a CppAD::ADFun object.
}
\description{
Creates a tape of the Jacobian of function taped by CppAD.
When the function returns a real value (as is the case for densities and the score matching objective) the Jacobian is equivalent to the gradient.
The \code{x} vector is used as the value to conduct the taping.
}
\details{
When the returned tape is evaluated (via say \code{\link[=pForward0]{pForward0()}}, the resultant vector contains the Jacobian in long format (see \url{https://cppad.readthedocs.io/en/latest/Jacobian.html}).
Suppose the function represented by \code{pfun} maps from \eqn{n}-dimensional space to \eqn{m}-dimensional space, then
the first \eqn{n} elements of vector is the gradient of the first component of function output.
The next \eqn{n} elements of the vector is the gradient of the second component of the function output.
The Jacobian as a matrix, could then be obtained by \code{\link[=as.matrix]{as.matrix()}} with \code{byrow = TRUE} and \code{ncol = n}.
}
